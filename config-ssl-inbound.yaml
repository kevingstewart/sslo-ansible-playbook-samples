---
# Reference: https://clouddocs.f5.com/products/orchestration/ansible/devel/f5_bigip/modules_2_0/bigip_sslo_config_ssl_module.html#bigip-sslo-config-ssl-module-2

- name: Create SSLO SSL Inbound Configuration
  hosts: all
  gather_facts: False

  collections:
    - f5networks.f5_bigip
  connection: httpapi

  vars:
#     ansible_host: "172.16.1.83"
    ansible_httpapi_port: 443
    ansible_user: "admin"
    ansible_httpapi_password: "admin"
    ansible_network_os: f5networks.f5_bigip.bigip
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no

  tasks:
#     ## import cert/key
#     - name: Import CA cert/key
#       bigip_ssl_key_cert:
#         key_content: "{{ lookup('file', 'certs/wildcardrsa.f5labs.com.pemk') }}"
#         key_name: wildcardrsa.f5labs.com
#         cert_content: "{{ lookup('file', 'certs/wildcardrsa.f5labs.com.crt') }}"
#         cert_name: wildcardrsa.f5labs.com

    ## SSL Configuration (simple)
    - name: Create an SSLO inbound SSL config
      bigip_sslo_config_ssl:
        name: "sslconfig"
        state: "present"
        client_settings:
          proxy_type: "reverse"
          cert: "/Common/default.crt"
          key: "/Common/default.key"        


#     ## SSL Configuration (complex)
#      - name: Create an SSLO outbound SSL config
#        bigip_sslo_config_ssl:
#          name: "sslconfig"
#          state: "present"
#          client_settings:
#            proxy_type: "reverse"
#            cipher_type: "group"
#            cipher_group: "/Common/f5-default"
#            ca_cert: "/Common/wildcardrsa.f5labs.com.crt"
#            ca_key: "/Common/wildcardrsa.f5labs.com.key"
#          server_settings:
#            cipher_type: "group"
#            cipher_group: "/Common/f5-default"
#            block_expired: true
#            block_untrusted: true
#            ca_bundle: "/Common/ca-bundle.crt"
#          sni:
#            sni_default: true
#            sni_server_name: "www.f5labs.com"
#          timeout: 400

